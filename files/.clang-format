---
# http://clang.llvm.org/docs/ClangFormatStyleOptions.html

Language: Cpp
Standard: Cpp11
BasedOnStyle: LLVM
DisableFormat: false
TabWidth: 4
IndentWidth: 4 # 缩进宽度
ContinuationIndentWidth: 4 # 延续的行的缩进宽度
UseTab: Never # 使用tab字符: Never, ForIndentation, ForContinuationAndIndentation, Always
ColumnLimit: 150 # 每行字符的限制，0表示没有限制

PointerAlignment: Right # 指针和引用的对齐: Left, Right, Middle

AccessModifierOffset: -4 # 访问说明符(public、private等)的偏移

AlignAfterOpenBracket: DontAlign # 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行)
AlignConsecutiveAssignments: true # 对齐连续等号
AlignConsecutiveDeclarations: false # 对齐连续声明的变量名
AlignConsecutiveMacros: true # 对齐连续宏
AlignEscapedNewlinesLeft: true # 左对齐逃脱换行(使用反斜杠换行)的反斜杠
AlignOperands: true # 水平对齐二元和三元表达式的操作数
AlignTrailingComments: true # 对齐连续的尾随的注释

AllowAllParametersOfDeclarationOnNextLine: true # 允许函数声明的所有参数在放在下一行
AllowShortBlocksOnASingleLine: false # 允许短的块放在同一行
AllowShortCaseLabelsOnASingleLine: false # 允许短的case标签放在同一行
AllowShortFunctionsOnASingleLine: Empty # 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortIfStatementsOnASingleLine: true # 允许短的if语句保持在同一行
AllowShortLoopsOnASingleLine: false # 允许短的循环保持在同一行

AlwaysBreakAfterReturnType: None # 总是在返回类型后换行: None, All, TopLevel(顶级函数，不包括在类中的函数),AllDefinitions(所有的定义，不包括声明), TopLevelDefinitions(所有的顶级函数的定义)
AlwaysBreakBeforeMultilineStrings: false # 总是在多行string字面量前换行
AlwaysBreakTemplateDeclarations: false # 总是在template声明后换行

BinPackArguments: false # 为false时函数实参要么都在同一行，要么都各自一行
BinPackParameters: false # 为false时所有形参要么都在同一行，要么都各自一行

BreakBeforeBraces: Custom # 大括号换行
BraceWrapping:
    AfterCaseLabel: true
    AfterClass: true
    AfterControlStatement: true
    AfterEnum: true
    AfterFunction: true
    AfterNamespace: true
    AfterStruct: true
    AfterUnion: true
    BeforeCatch: true
    BeforeElse: true
    IndentBraces: false

BreakBeforeBinaryOperators: NonAssignment # 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)
BreakBeforeTernaryOperators: true # 在三元运算符前换行
BreakConstructorInitializersBeforeComma: false # 在构造函数的初始化列表的逗号前换行

ConstructorInitializerAllOnOneLineOrOnePerLine: false # 构造函数的初始化列表要么都在同一行，要么都各自一行
ConstructorInitializerIndentWidth: 4 # 构造函数的初始化列表的缩进宽度

Cpp11BracedListStyle: true # 去除C++11的列表初始化的大括号{后和}前的空格

DerivePointerAlignment: false # 继承最常用的指针和引用的对齐方式

ExperimentalAutoDetectBinPacking: false # 自动检测函数的调用和定义是否被格式为每行一个参数(Experimental)

ForEachMacros: [foreach, Q_FOREACH, BOOST_FOREACH] # 需要被解读为foreach循环而不是函数调用的宏

SortIncludes: true # 允许排序#include
IncludeCategories:
    - Regex: '^"(stdafx|main)'
      Priority: -3
    - Regex: '^"(IRPlayer|Define|event).h'
      Priority: -2
    - Regex: '^"IRPlayer'
      Priority: -1
    - Regex: '^"Dlg'
      Priority: 2
    - Regex: 'SDK'
      Priority: 3

IndentCaseLabels: false # 缩进case标签
IndentWrappedFunctionNames: false # 函数返回类型换行时，缩进函数声明或函数定义的函数名
KeepEmptyLinesAtTheStartOfBlocks: true # 保留在块开始处的空行
MacroBlockBegin: 'BEGIN_' # 开始一个块的宏的正则表达式
MacroBlockEnd: 'END_' # 结束一个块的宏的正则表达式
MaxEmptyLinesToKeep: 1 # 连续空行的最大数量

PenaltyBreakBeforeFirstCallParameter: 19 # 在call后对函数调用换行的临界值
PenaltyBreakComment: 0 # 在一个注释中引入换行的临界值
PenaltyBreakFirstLessLess: 120 # 第一次在<<前换行的临界值
PenaltyBreakString: 1000 # 在一个字符串字面量中引入换行的临界值
PenaltyExcessCharacter: 1000000 # 对于每个在行字符数限制之外的字符的临界值
PenaltyReturnTypeOnItsOwnLine: 60 # 将函数的返回类型放到它自己的行的临界值

ReflowComments: true # 允许重新排版注释
SpacesBeforeTrailingComments: 1 # 在尾随的评论前添加的空格数(只适用于//)
CommentPragmas: '^ IWYU pragma:' # 描述具有特殊意义的注释的正则表达式，它不应该被分割为多行或以其它方式改变

SpaceAfterCStyleCast: false # 在C风格类型转换后添加空格
SpaceBeforeAssignmentOperators: true # 在赋值运算符之前添加空格
SpaceBeforeParens: ControlStatements # 开圆括号之前添加一个空格: Never, ControlStatements, Always
SpaceInEmptyParentheses: false # 在空的圆括号中添加空格
SpacesInAngles: false # 在尖括号的<后和>前添加空格
SpacesInContainerLiterals: false # 在容器(ObjC和JavaScript的数组和字典等)字面量中添加空格
SpacesInCStyleCastParentheses: false # 在C风格类型转换的括号中添加空格
SpacesInParentheses: false # 在圆括号的(后和)前添加空格
SpacesInSquareBrackets: false # 在方括号的[后和]前添加空格，lamda表达式和未指明大小的数组的声明不受影响

FixNamespaceComments: false # 强制命名空间注释
NamespaceIndentation: All # 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All
